[tool.poetry]
name = "cpu"
version = "1.1.10"
description = ""
authors = ["BardinPetr <bardin.petr@gmail.com>"]
license = "GPLv3"
packages = [
    { include = "machine", from = "src" },
    { include = "mcasm", from = "src" },
    { include = "isa", from = "src" },
    { include = "compiler", from = "src" },
    { include = "test" }
]

[tool.poetry.dependencies]
python = "^3.11"
pyvcd = "^0.4.0"
lark = "^1.1.9"
myhdl = { git = "https://github.com/BardinPetr/myhdl.git", rev = "feature_typed" }
cpulplib = { git = "https://github.com/BardinPetr/lexer-parser" }
tabulate = "^0.9.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.2"
pytest-golden = "^0.2.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.7"

[tool.ruff.lint]
ignore = [
    "E731", # for using lambdas in class (Lark)
    "F403", "F405", # for from myhdl import *
    "F841" # unused vars in fucntion, needed for MyHDL instances()
]

[tool.pytest.ini_options]
testpaths = ["test"]
enable_assertion_pass_hook = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
