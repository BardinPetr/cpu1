(IGNORE(INC) PASSA) push(D);
(IGNORE(INC) ADD IGNORE(INC)) push(D);
(DS(INC) ADD IGNORE(INC)) push(D);

start:


infetch: # fetch instruction from RAM and increase IP
(IP PASSA) -> AR;
(DRR PASSA) -> CR;
(IP(INC) PASSA) -> IP;


exec:
if (CR PASSA)[30] == 1 jmp GRP1XX;
GRP0XX:

# some ifs

if (CR PASSA)[20] == 1 jmp C_SUB;
C_ADD:
(DS ADD DS) poprep(D);
jmp end;

C_SUB:
(DS ADD DS(INC,NOT)) poprep(D);
jmp end;


GRP1XX:


#if (CR PASSA)[30] == 0 {
#    if (CR PASSA)[29] == 0 {
#        if (CR PASSA)[28] == 0 {
#            # group 0000 : GMTH
#
#
#        } else {
#            # group 0001 : GSTK
#        };
#    } else {
#        if (CR PASSA)[28] == 0 {
#
#        } else {
#
#        };
#    };
#} else {
#    if (CR PASSA)[29] == 0 {
#        if (CR PASSA)[28] == 0 {
#
#        } else {
#
#        };
#    } else {
#        if (CR PASSA)[28] == 0 {
#
#        } else {
#
#        };
#    };
#};


end:

jmp start;
